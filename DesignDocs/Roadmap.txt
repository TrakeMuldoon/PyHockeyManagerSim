RANDOM PLAYER GENERATION

RANDOM GOALIE GENERATION

RANDOM TEAM GENERATION

Assign Players to TEAM
done
SIMPLE SIMULATOR
    - Puck Moves Randomly
    - Players Act Randomly
    - Players Succeed Randomly
    - Players move Randomly

Move Faceoff to resolver
Move Race to resolver

ADD Pygame Visualization
    Player Location Heads (Home/Away helmets?)
    Puck Location
    Score Tracking

ADD Players Move with purpose based on position

ADD Team Colours (Helmet Colours) / Player Numbers

ADD Opposition to action

ADD PlayerAction and ActionOption probabilities (general)

ADD PlayerAction and ActionOption probabilities weighted by Coaching Stragegy

ADD Descriptive commentators

ADD Endurance and rotational Line-changes, and "lines"

Change Player Generation to use a generator

ADD modified stats generation based on position
Move player selection out of GameSim

ADD positional modifiers for situation and general

ADD Penalties

Ensure games take < 0.05 second per game (without print statements)
    OR 1344 games in < 60 seconds

Optimize OpposedSkill Check calculation with a cachetable
https://docs.python.org/3/library/functools.html

PHASE 2
NHL Schedule
    (7 * 4) + (8 * 3) + (16 * 2) = 28 + 24 + 32 = 84 games per team per season
    84 * 16 = (84 * 10) + (84 * 5) + 84 = 840 + 420 + 84 = 1260 + 84 = 1344 games total

SIMULATE SEASON
Schedule generation
- Look up how this is done professionally
-- https://stackoverflow.com/questions/1037057/how-to-automatically-generate-a-sports-league-schedule

simulate all games

Track Goals and Assists

SET Lines

CHANGE ON THE FLY

ADD Strategic line changing

ADD pulling goalie

ADD EndGame desperation actions

ADD ability to dress only certain players

ADD injuries

Add Player Salaries, Money

Add Stadiums, ticket prices/desirablility

Add Stadium SECTIONS
